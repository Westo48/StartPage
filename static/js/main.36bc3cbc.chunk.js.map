{"version":3,"sources":["icons/entertainment.svg","icons/code.svg","icons/eye.svg","components/pages/Hub.js","components/weston/Clock.js","components/weston/LinkSet.js","components/weston/WestonStartPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","hub","className","to","Component","Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","LinkSet","links","filter","link","category","map","filteredLink","key","url","href","name","WestonStartPage","src","entertainLogo","alt","codeLogo","eyeLogo","App","exact","path","component","Hub","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36bc3cbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/entertainment.e7541885.svg\";","module.exports = __webpack_public_path__ + \"static/media/code.369ce179.svg\";","module.exports = __webpack_public_path__ + \"static/media/eye.42668b69.svg\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class hub extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">\r\n                    Hello There\r\n                </h1>\r\n                <Link to=\"/weston\" className=\"btn btn-primary\">Weston</Link>\r\n                <h1 className=\"display-4\">\r\n                    General Kenobi\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: new Date() };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4 text-center\">{this.state.date.toLocaleTimeString()}</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class LinkSet extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"link-set-links\">\r\n                {this.props.links.filter(link => link.category === this.props.category).map(filteredLink => (\r\n                    <div key={filteredLink.url}>\r\n                        <a href={filteredLink.url} className=\"lead\">{filteredLink.name}</a>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './WestonStyle.css'\r\n\r\nimport entertainLogo from '../../icons/entertainment.svg'\r\nimport codeLogo from '../../icons/code.svg'\r\nimport eyeLogo from '../../icons/eye.svg'\r\n\r\nimport Clock from './Clock'\r\nimport LinkSet from './LinkSet'\r\n\r\nexport default class WestonStartPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            links: [\r\n                {\r\n                    name: 'Netflix',\r\n                    url: 'https://www.netflix.com/browse',\r\n                    category: 'Entertain'\r\n                },\r\n                {\r\n                    name: 'Hulu',\r\n                    url: 'https://www.hulu.com/',\r\n                    category: 'Entertain'\r\n                },\r\n                {\r\n                    name: 'Disney+',\r\n                    url: 'https://www.disneyplus.com/',\r\n                    category: 'Entertain'\r\n                },\r\n                {\r\n                    name: 'Funimation',\r\n                    url: 'https://www.funimation.com/',\r\n                    category: 'Entertain'\r\n                },\r\n                {\r\n                    name: 'YouTube',\r\n                    url: 'https://www.youtube.com/',\r\n                    category: 'Entertain'\r\n                },\r\n                {\r\n                    name: 'GitHub',\r\n                    url: 'https://github.com/',\r\n                    category: 'Dev'\r\n                },\r\n                {\r\n                    name: 'StackOverflow',\r\n                    url: 'https://stackoverflow.com/',\r\n                    category: 'Dev'\r\n                },\r\n                {\r\n                    name: 'Clash Blog',\r\n                    url: 'https://clashofclans.com/blog/',\r\n                    category: 'Gaming'\r\n                },\r\n                {\r\n                    name: 'Clash Ninja',\r\n                    url: 'https://www.clash.ninja/upgrade-tracker/rgq8rgu9/home#builders',\r\n                    category: 'Gaming'\r\n                },\r\n                {\r\n                    name: 'Clash of Stats',\r\n                    url: 'https://www.clashofstats.com/players/razgriz-RGQ8RGU9/summary',\r\n                    category: 'Gaming'\r\n                },\r\n\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { links } = this.state\r\n\r\n        return (\r\n            <div className=\"westonContainer\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-2 text-center\">\r\n                        Hello Weston\r\n                    </h1>\r\n                    <Clock />\r\n                    <div className=\"link-set-group row text-center\">\r\n                        <div className=\"link-set col-md-4 mb-3\">\r\n                            <div className=\"link-set-head\">\r\n                                <img src={entertainLogo} alt=\"Entertainment\" className=\"mb-3\" />\r\n                            </div>\r\n                            <LinkSet links={links} category=\"Entertain\" />\r\n                        </div>\r\n                        <div className=\"link-set col-md-4 mb-3\">\r\n                            <div className=\"link-set-head\">\r\n                                <img src={codeLogo} alt=\"Code\" className=\"mb-3\" />\r\n                            </div>\r\n                            <LinkSet links={links} category=\"Dev\" />\r\n                        </div>\r\n                        <div className=\"link-set col-md-4 mb-3\">\r\n                            <div className=\"link-set-head\">\r\n                                <img src={eyeLogo} alt=\"Gaming\" className=\"mb-3\" />\r\n                            </div>\r\n                            <LinkSet links={links} category=\"Gaming\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport './App.css';\n\nimport Hub from './components/pages/Hub'\nimport WestonStartPage from './components/weston/WestonStartPage'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Hub} />\n        <Route exact path=\"/weston\" component={WestonStartPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}